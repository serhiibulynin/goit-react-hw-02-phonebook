{"version":3,"sources":["components/contactList/ContactList.module.css","components/contactForm/ContactForm.module.css","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js","components/contactList/contactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChangeInput","e","target","value","setState","handleSubmit","preventDefault","props","onSubmit","className","styles","FormEditor","this","FormEditorLabel","htmlFor","FormEditorInput","type","pattern","title","required","onChange","id","FormEditorButton","Component","ContactListItem","contacts","onRemoveContact","ContactListButton","onClick","ContactList","map","Filter","App","filter","addContact","data","contact","includes","alert","prev","removeContact","contactId","prevState","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32d992be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__3v7Sh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormEditor\":\"ContactForm_FormEditor__ZjoNk\",\"FormEditorLabel\":\"ContactForm_FormEditorLabel__txHR0\",\"FormEditorInput\":\"ContactForm_FormEditorInput__33GC3\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__1DZkU\",\"FormEditorButton\":\"ContactForm_FormEditorButton__3LSYb\"};","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChangeInput = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.FormEditor} onSubmit={this.handleSubmit}>\r\n        <label className={styles.FormEditorLabel} htmlFor={this.nameInputId}>\r\n          Name\r\n          <input\r\n            className={styles.FormEditorInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleChangeInput}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label className={styles.FormEditorLabel} htmlFor={this.numberInputId}>\r\n          Number\r\n          <input\r\n            className={styles.FormEditorInput}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChangeInput}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button className={styles.FormEditorButton} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ contacts, onRemoveContact }) => (\r\n  <li className={styles.ContactListItem}>\r\n    {contacts.name + \":\" + contacts.number}\r\n    {\r\n      <button\r\n        className={styles.ContactListButton}\r\n        type=\"button\"\r\n        name=\"delete\"\r\n        onClick={() => onRemoveContact(contacts.id)}\r\n      >\r\n        delete\r\n      </button>\r\n    }\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul className={styles.ContactList}>\r\n    {contacts.map((contacts) => (\r\n      <ContactListItem\r\n        key={contacts.id}\r\n        contacts={contacts}\r\n        onRemoveContact={onRemoveContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContaсtList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (data) => {\n    const contactIncludesName = this.state.contacts\n      .map((contact) => contact.name)\n      .includes(data.name);\n    if (contactIncludesName) {\n      return alert(`${data.name} is already in contacts`);\n    }\n    const contact = { id: uuidv4(), name: data.name, number: data.number };\n    this.setState((prev) => ({ contacts: [contact, ...prev.contacts] }));\n  };\n\n  removeContact = (contactId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  changeFilter = (e) => this.setState({ filter: e.target.value });\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContaсtList\n          contacts={filteredContacts}\n          onRemoveContact={this.removeContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactListItem\":\"ContactListItem_ContactListItem__1y4xC\",\"completed\":\"ContactListItem_completed__3Gaq5\",\"ContactListButton\":\"ContactListItem_ContactListButton__3pe_H\"};"],"sourceRoot":""}